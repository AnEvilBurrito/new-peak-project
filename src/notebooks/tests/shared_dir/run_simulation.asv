%% Run ODE-model 
function [tbl, statevalues, tspan] = run_simulation(paramvals, x0s, paramnames)
% SIMULATE_DRUG_RESPONSE
% Simulates the dynamics of a signaling network in response to drug perturbations.
%
% INPUTS:
%   bestfit_paramsets : N x P matrix of best-fit parameter values
%   x0s               : initial state vector
%   paramnames        : 1 x P cell array of parameter names (same order as columns of bestfit_paramsets)
%   model             : string name of compiled MEX model (e.g., 'FGFR4_model_rev2a_mex')
%
% OUTPUTS:
%   tbl               : table of simulated readouts over drug response time
%   statevalues       : full matrix of all state values over time
%   tspan             : full simulation time vector
    clear; clc; close all;

    %  global variables
    % (param names, state names, param values, initial values)
    model = 'FGFR4_model_rev2a_mex';
    param_names     = eval(strcat("deblank(",model,"('Parameters'))"));
    state_names     = eval(strcat("deblank(",model,"('States'))"));
    variable_names  = eval(strcat("deblank(",model,"('VariableNames'))"));
    p0  = eval(strcat(model,"('parametervalues')"));
    X0  = eval(model);


    %% Settings
    options.maxnumsteps = 2000;

    %% Extract stimulation time
    StimOn = bestfit_paramsets(1, strcmp(paramnames, 'FGF_on'));

    %% Time frames
    drug_response_time = (0:24) * 60; % [min]

    Time_starv_section = linspace(0, StimOn, 1000);
    Time_qstim_section = Time_starv_section(end) + linspace(0, StimOn, 1000);
    Time_drug_section  = Time_qstim_section(end) + reshape(drug_response_time, 1, []);

    tspan = sort(unique([Time_starv_section, Time_qstim_section, Time_drug_section]));

    Tindex_starv = ismember(tspan, Time_starv_section);
    Tindex_qstim = ismember(tspan, Time_qstim_section);
    Tindex_drug  = ismember(tspan, Time_drug_section);

    %% Time offset corrections
    Time_starv = tspan(Tindex_starv);
    Time_qstim = tspan(Tindex_qstim) - Time_starv_section(end);
    Time_drug  = tspan(Tindex_drug) - Time_qstim_section(end);



    %% Drug treatment
    drug_names = {'FGFR4i_0', 'PI3Ki_0', 'ERBBi_0', 'AKTi_0', 'MEKi_0'};
    drug_dose  = [100, 0, 0, 0, 0];  % nM

    paramvals(strcmp(paramnames, 'inh_on')) = Time_qstim_section(end);

    if ~all(strcmp(paramnames(ismember(paramnames, drug_names)), drug_names))
        error('=> param names are not matched to given drug names')
    end

    paramvals(ismember(paramnames, drug_names)) = drug_dose;

    %% Run model
    MEX_output = eval([model, '(tspan, x0s, paramvals'', options);']);
    statevalues = MEX_output.statevalues;

    %% Readouts
    myreadouts = {
        'pAkt', 'pIGFR', 'pFGFR4', 'pERBB', 'pIRS', 'aPI3K', 'PIP3', ...
        'pFRS2', 'aGrb2', 'aPDK1', 'amTORC1', 'pS6K', 'aSos', 'aShp2', ...
        'aRas', 'aRaf', 'pMEK', 'pERK', 'aGAB1', 'aGAB2', 'SPRY2', ...
        'pSPRY2', 'PTP', 'aCbl', 'FOXO', 'amTORC2'};

    rds_idx = ismember(MEX_output.states, myreadouts);
    readouts = MEX_output.states(rds_idx);
    arry = statevalues(Tindex_drug, rds_idx);

    % Generate output table
    tbl = array2table(arry, ...
        'VariableNames', readouts, ...
        'RowNames', string(drug_response_time));
end
